name: Docker Build and Deploy to GKE

on:
  push:
    tags:
      - 'v*'

env:
  IMAGE_NAME: ghcr.io/nus-iss-projects/flight-backend/flightbackend
  IMAGE_TAG: ${{ github.ref_name }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}

jobs:
  setup-build-deploy:
    name: Setup, Build, and Store Artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17
      - run: mvn clean install --batch-mode --errors --fail-at-end
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flightsearch-0.0.1-SNAPSHOT.jar
          path: target/
  build-docker-image:
    name: Dockerize and push to GitHub Container Registry
    needs: setup-build-deploy
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Retrieve saved jar
        uses: actions/download-artifact@v2
        with:
          name: flightsearch-0.0.1-SNAPSHOT.jar
          path: target/

      - name: List files in target directory
        run: ls target/

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        env:
          USERNAME: ${{ secrets.GITHUB_USERNAME }}
          PASSWORD: ${{ secrets.GITHUB_PASSWORD }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker build --tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}   

  deploy-to-gke:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup GCP
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_AUTH }}
          export_default_credentials: true

      - name: Activate GCP Service Account
        run: |
          echo "${{ secrets.GCLOUD_AUTH }}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.PROJECT_ID }}

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          sudo mv kustomize /usr/local/bin/

      - name: Install Google Cloud SDK
        run: |
          curl https://sdk.cloud.google.com | bash
          echo "$HOME/google-cloud-sdk/bin" >> $GITHUB_PATH

      - name: Verify gke-gcloud-auth-plugin is installed
        run: |
          gke-gcloud-auth-plugin --version

      - name: Set Image Tag in Kustomization
        run: |
          kustomize edit set image ${{ env.IMAGE_NAME }}=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        working-directory: ./k8s/overlays/prod

      - name: Apply Kubernetes Manifests with kustomize
        run: |
          kustomize build ./k8s/overlays/prod | kubectl apply -f -